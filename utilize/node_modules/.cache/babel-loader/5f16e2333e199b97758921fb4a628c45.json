{"ast":null,"code":"var _jsxFileName = \"D:\\\\utilize\\\\src\\\\containers\\\\MainPage\\\\MainPage.js\";\nimport React from 'react';\nimport Orders from '../../components/Orders/Orders';\nimport * as actions from '../../store/actions/OrderCreator';\nimport { connect } from 'react-redux';\nimport './MainPage.css';\n\nclass Mainpage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = id => {\n      this.props.getOrder(id);\n    };\n  }\n\n  // ordersCount = 30;\n  componentDidMount() {\n    this.props.fetchOrders(this.ordersCount); // document.addEventListener('scroll', this.scrollingToBottom)\n  } // scrollingToBottom= () => {\n  //     const element = document.getElementById('orders')\n  //     if(element!==null && element.getBoundingClientRect().bottom <= window.innerHeight){\n  //         this.ordersCount+=30\n  //         console.log(this.ordersCount)\n  //         this.props.fetchOrders(this.ordersCount)\n  //     }\n  // }\n\n\n  render() {\n    console.log(this.props.editedOrder);\n    return React.createElement(\"div\", {\n      className: \"MainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Orders, {\n      orders: this.props.orders,\n      getOrder: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders,\n    editedOrder: state.editedOrder\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOrders: count => dispatch(actions.fetchingOrders(count)),\n    getOrder: id => dispatch(actions.getOrder(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mainpage);","map":{"version":3,"sources":["D:/utilize/src/containers/MainPage/MainPage.js"],"names":["React","Orders","actions","connect","Mainpage","Component","handleClick","id","props","getOrder","componentDidMount","fetchOrders","ordersCount","render","console","log","editedOrder","orders","mapStateToProps","state","mapDispatchToProps","dispatch","count","fetchingOrders"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AAAA;AAAA;;AAAA,SAmBlCC,WAnBkC,GAmBnBC,EAAD,IAAQ;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,EAApB;AACH,KArBiC;AAAA;;AAElC;AAEAG,EAAAA,iBAAiB,GAAE;AACf,SAAKF,KAAL,CAAWG,WAAX,CAAuB,KAAKC,WAA5B,EADe,CAEf;AACH,GAPiC,CASlC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAMAC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,WAAvB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAA3B;AAAmC,MAAA,QAAQ,EAAE,KAAKX,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA9BiC;;AAkCtC,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACF,MADX;AAEHD,IAAAA,WAAW,EAAEG,KAAK,CAACH;AAFhB,GAAP;AAIH,CALD;;AAOA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHV,IAAAA,WAAW,EAAGW,KAAD,IAASD,QAAQ,CAACnB,OAAO,CAACqB,cAAR,CAAuBD,KAAvB,CAAD,CAD3B;AAEHb,IAAAA,QAAQ,EAAGF,EAAD,IAAMc,QAAQ,CAACnB,OAAO,CAACO,QAAR,CAAiBF,EAAjB,CAAD;AAFrB,GAAP;AAIH,CALD;;AAOA,eAAeJ,OAAO,CAACe,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ChB,QAA5C,CAAf","sourcesContent":["import React from 'react'\r\nimport Orders from '../../components/Orders/Orders'\r\nimport * as actions from '../../store/actions/OrderCreator'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './MainPage.css'\r\n\r\nclass Mainpage extends React.Component{\r\n\r\n    // ordersCount = 30;\r\n\r\n    componentDidMount(){\r\n        this.props.fetchOrders(this.ordersCount)\r\n        // document.addEventListener('scroll', this.scrollingToBottom)\r\n    }\r\n\r\n    // scrollingToBottom= () => {\r\n    //     const element = document.getElementById('orders')\r\n        \r\n    //     if(element!==null && element.getBoundingClientRect().bottom <= window.innerHeight){\r\n    //         this.ordersCount+=30\r\n    //         console.log(this.ordersCount)\r\n    //         this.props.fetchOrders(this.ordersCount)\r\n    //     }\r\n    // }\r\n\r\n    handleClick = (id) => {\r\n        this.props.getOrder(id)\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.editedOrder)\r\n        return(\r\n            <div className=\"MainPage\">                \r\n                <Orders orders={this.props.orders} getOrder={this.handleClick} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders,\r\n        editedOrder: state.editedOrder\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrders: (count)=>dispatch(actions.fetchingOrders(count)),\r\n        getOrder: (id)=>dispatch(actions.getOrder(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Mainpage)"]},"metadata":{},"sourceType":"module"}