{"ast":null,"code":"var _jsxFileName = \"D:\\\\utilize\\\\src\\\\containers\\\\AddOrEditOrder\\\\AddOrEditOrder.js\";\nimport React from 'react';\nimport './AddOrEditOrder.css';\nimport * as actions from '../../store/actions/OrderCreator';\nimport { connect } from 'react-redux';\n\nclass AddOrEditOrder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customer_name: '',\n      customer_email: '',\n      product: '',\n      quantity: '',\n      id: ''\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        customer_name: event.target.value\n      });\n    };\n\n    this.handleEmailChange = event => {\n      this.setState({\n        customer_email: event.target.value\n      });\n    };\n\n    this.handleProductChange = event => {\n      this.setState({\n        product: event.target.value\n      });\n    };\n\n    this.handleQtyChange = event => {\n      this.setState({\n        quantity: event.target.value\n      });\n    };\n\n    this.toggleAddEditOrder = event => {\n      event.preventDefault();\n      this.props.toggleEditing(0);\n    };\n\n    this.clearForm = event => {\n      event.preventDefault();\n      this.props.clearForm();\n    };\n\n    this.onSubmitForm = () => {};\n  }\n\n  componentDidUpdate() {\n    const order = this.props.editedOrder;\n    if (order.id !== this.state.id) this.setState({ ...order\n    });\n  }\n\n  render() {\n    let editedOrder = null;\n    if (this.props.editedOrder !== null) editedOrder = this.props.editedOrder;\n    return React.createElement(\"div\", {\n      className: \"Addoreditorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Add or Edit Order\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Fill The Order\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.customer_name,\n      onChange: event => {\n        this.handleNameChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.customer_email,\n      onChange: event => {\n        this.handleEmailChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.product,\n      onChange: event => {\n        this.handleProductChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.quantity,\n      onChange: event => {\n        this.handleQtyChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggleAddEditOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Toggle to \", this.props.editing ? \"Edit\" : \"Add\", \" Product\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.props.editing ? \"Add\" : \"Edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    editedOrder: state.editedOrder,\n    editing: state.editing\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleEditing: () => dispatch(actions.toggleEditing()),\n    clearForm: () => dispatch(actions.clearEditingOrder()),\n    addToForm: () => dispatch(actions.addToForm())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrEditOrder);","map":{"version":3,"sources":["D:/utilize/src/containers/AddOrEditOrder/AddOrEditOrder.js"],"names":["React","actions","connect","AddOrEditOrder","Component","state","customer_name","customer_email","product","quantity","id","handleNameChange","event","setState","target","value","handleEmailChange","handleProductChange","handleQtyChange","toggleAddEditOrder","preventDefault","props","toggleEditing","clearForm","onSubmitForm","componentDidUpdate","order","editedOrder","render","editing","mapStateToProps","mapDispatchToProps","dispatch","clearEditingOrder","addToForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACJC,MAAAA,aAAa,EAAC,EADV;AAEJC,MAAAA,cAAc,EAAC,EAFX;AAGJC,MAAAA,OAAO,EAAC,EAHJ;AAIJC,MAAAA,QAAQ,EAAC,EAJL;AAKJC,MAAAA,EAAE,EAAC;AALC,KAFgC;;AAAA,SAUxCC,gBAVwC,GAUpBC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AACVP,QAAAA,aAAa,EAACM,KAAK,CAACE,MAAN,CAAaC;AADjB,OAAd;AAGH,KAduC;;AAAA,SAgBxCC,iBAhBwC,GAgBnBJ,KAAD,IAAW;AAC3B,WAAKC,QAAL,CAAc;AACVN,QAAAA,cAAc,EAACK,KAAK,CAACE,MAAN,CAAaC;AADlB,OAAd;AAGH,KApBuC;;AAAA,SAsBxCE,mBAtBwC,GAsBjBL,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AACVL,QAAAA,OAAO,EAACI,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGH,KA1BuC;;AAAA,SA4BxCG,eA5BwC,GA4BrBN,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAACG,KAAK,CAACE,MAAN,CAAaC;AADZ,OAAd;AAGH,KAhCuC;;AAAA,SAkCxCI,kBAlCwC,GAkClBP,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACQ,cAAN;AACA,WAAKC,KAAL,CAAWC,aAAX,CAAyB,CAAzB;AACH,KArCuC;;AAAA,SAuCxCC,SAvCwC,GAuC3BX,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACQ,cAAN;AACA,WAAKC,KAAL,CAAWE,SAAX;AACH,KA1CuC;;AAAA,SAsDxCC,YAtDwC,GAsDzB,MAAM,CAEpB,CAxDuC;AAAA;;AA4CxCC,EAAAA,kBAAkB,GAAE;AAChB,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWM,WAAzB;AAEA,QAAGD,KAAK,CAAChB,EAAN,KAAW,KAAKL,KAAL,CAAWK,EAAzB,EAEA,KAAKG,QAAL,CAAc,EACV,GAAGa;AADO,KAAd;AAGH;;AAMDE,EAAAA,MAAM,GAAE;AAEJ,QAAID,WAAW,GAAG,IAAlB;AAEA,QAAG,KAAKN,KAAL,CAAWM,WAAX,KAAyB,IAA5B,EACIA,WAAW,GAAG,KAAKN,KAAL,CAAWM,WAAzB;AAGJ,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,aAArC;AAAoD,MAAA,QAAQ,EAAGM,KAAD,IAAS;AAAC,aAAKD,gBAAL,CAAsBC,KAAtB;AAA6B,OAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,cAArC;AAAqD,MAAA,QAAQ,EAAGK,KAAD,IAAS;AAAC,aAAKI,iBAAL,CAAuBJ,KAAvB;AAA8B,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,OAArC;AAA8C,MAAA,QAAQ,EAAGI,KAAD,IAAS;AAAC,aAAKK,mBAAL,CAAyBL,KAAzB;AAAgC,OAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,EAQI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWI,QAAvC;AAAiD,MAAA,QAAQ,EAAGG,KAAD,IAAS;AAAC,aAAKM,eAAL,CAAqBN,KAArB;AAA4B,OAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAKO,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqD,KAAKE,KAAL,CAAWQ,OAAX,GAAmB,MAAnB,GAA0B,KAA/E,aATJ,EAUI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,OAAX,GAAmB,KAAnB,GAAyB,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI;AAAQ,MAAA,OAAO,EAAE,KAAKN,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CAHJ,CADJ;AAoBH;;AAtFuC;;AAyF5C,MAAMO,eAAe,GAAGzB,KAAK,IAAI;AAC7B,SAAO;AACHsB,IAAAA,WAAW,EAAEtB,KAAK,CAACsB,WADhB;AAEHE,IAAAA,OAAO,EAAExB,KAAK,CAACwB;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHV,IAAAA,aAAa,EAAE,MAAIU,QAAQ,CAAC/B,OAAO,CAACqB,aAAR,EAAD,CADxB;AAEHC,IAAAA,SAAS,EAAE,MAAIS,QAAQ,CAAC/B,OAAO,CAACgC,iBAAR,EAAD,CAFpB;AAGHC,IAAAA,SAAS,EAAE,MAAIF,QAAQ,CAAC/B,OAAO,CAACiC,SAAR,EAAD;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAehC,OAAO,CAAC4B,eAAD,EAAiBC,kBAAjB,CAAP,CAA4C5B,cAA5C,CAAf","sourcesContent":["import React from 'react'\r\nimport './AddOrEditOrder.css'\r\nimport * as actions from '../../store/actions/OrderCreator'\r\nimport { connect } from 'react-redux'\r\n\r\nclass AddOrEditOrder extends React.Component{\r\n\r\n    state = {\r\n        customer_name:'',\r\n        customer_email:'',\r\n        product:'',\r\n        quantity:'',\r\n        id:''\r\n    }\r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({\r\n            customer_name:event.target.value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            customer_email:event.target.value\r\n        })\r\n    }\r\n\r\n    handleProductChange = (event) => {\r\n        this.setState({\r\n            product:event.target.value\r\n        })\r\n    }\r\n\r\n    handleQtyChange = (event) => {\r\n        this.setState({\r\n            quantity:event.target.value\r\n        })\r\n    }\r\n\r\n    toggleAddEditOrder = (event) => {\r\n        event.preventDefault()\r\n        this.props.toggleEditing(0)\r\n    }\r\n\r\n    clearForm = (event) => {\r\n        event.preventDefault()\r\n        this.props.clearForm()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const order = this.props.editedOrder\r\n        \r\n        if(order.id!==this.state.id)\r\n\r\n        this.setState({\r\n            ...order\r\n        })\r\n    }\r\n\r\n    onSubmitForm = () => {\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let editedOrder = null\r\n        \r\n        if(this.props.editedOrder!==null)\r\n            editedOrder = this.props.editedOrder\r\n        \r\n\r\n        return (\r\n            <div className=\"Addoreditorder\">\r\n                <h1>Add or Edit Order</h1>\r\n                <p>Fill The Order</p>\r\n                <form onSubmit={this.onSubmitForm}>\r\n                    <label>Name</label>\r\n                    <input type=\"text\" value={this.state.customer_name} onChange={(event)=>{this.handleNameChange(event)}} />\r\n                    <label>Email</label>\r\n                    <input type=\"text\" value={this.state.customer_email} onChange={(event)=>{this.handleEmailChange(event)}} />\r\n                    <label>Product</label>\r\n                    <input type=\"text\" value={this.state.product} onChange={(event)=>{this.handleProductChange(event)}} />\r\n                    <label>Qty</label>\r\n                    <input type=\"number\" value={this.state.quantity} onChange={(event)=>{this.handleQtyChange(event)}} />\r\n                    <button onClick={this.toggleAddEditOrder}>Toggle to {this.props.editing?\"Edit\":\"Add\"} Product</button>\r\n                    <input type=\"submit\" value={this.props.editing?\"Add\":\"Edit\"} />\r\n                    <button onClick={this.clearForm}>Reset</button>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        editedOrder: state.editedOrder,\r\n        editing: state.editing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleEditing: ()=>dispatch(actions.toggleEditing()),\r\n        clearForm: ()=>dispatch(actions.clearEditingOrder()),\r\n        addToForm: ()=>dispatch(actions.addToForm())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddOrEditOrder)"]},"metadata":{},"sourceType":"module"}