{"ast":null,"code":"var _jsxFileName = \"D:\\\\utilize\\\\src\\\\containers\\\\AddOrEditOrder\\\\AddOrEditOrder.js\";\nimport React from 'react';\nimport './AddOrEditOrder.css';\nimport * as actions from '../../store/actions/OrderCreator';\nimport { connect } from 'react-redux';\n\nclass AddOrEditOrder extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toggleAddEditOrder = event => {\n      event.preventDefault();\n      this.props.toggleEditing(0);\n    };\n\n    this.clearForm = event => {\n      event.preventDefault();\n      this.props.clearForm();\n    };\n  }\n\n  render() {\n    let editedOrder = null;\n    if (this.props.editedOrder !== null) editedOrder = this.props.editedOrder;\n    return React.createElement(\"div\", {\n      className: \"Addoreditorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Add or Edit Order\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Fill The Order\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.editedOrder.customer_name,\n      onChange: event => {\n        this.handleNameChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.editedOrder.customer_email,\n      onChange: event => {\n        this.handleEmailChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.editedOrder.product,\n      onChange: event => {\n        this.handleProductChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.props.editedOrder.quantity,\n      onChange: event => {\n        this.handleQtyChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggleAddEditOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Toggle to \", this.props.editing ? \"Edit\" : \"Add\", \" Product\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.props.editing ? \"Add\" : \"Edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    editedOrder: state.editedOrder,\n    editing: state.editing\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleEditing: () => dispatch(actions.toggleEditing()),\n    clearForm: () => dispatch(actions.clearEditingOrder()),\n    handleInputChange: input => dispatch(actions.handleInputChange())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrEditOrder);","map":{"version":3,"sources":["D:/utilize/src/containers/AddOrEditOrder/AddOrEditOrder.js"],"names":["React","actions","connect","AddOrEditOrder","Component","toggleAddEditOrder","event","preventDefault","props","toggleEditing","clearForm","render","editedOrder","customer_name","handleNameChange","customer_email","handleEmailChange","product","handleProductChange","quantity","handleQtyChange","editing","mapStateToProps","state","mapDispatchToProps","dispatch","clearEditingOrder","handleInputChange","input"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './AddOrEditOrder.css'\r\nimport * as actions from '../../store/actions/OrderCreator'\r\nimport { connect } from 'react-redux'\r\n\r\nclass AddOrEditOrder extends React.Component{\r\n\r\n    toggleAddEditOrder = (event) => {\r\n        event.preventDefault()\r\n        this.props.toggleEditing(0)\r\n    }\r\n\r\n    clearForm = (event) => {\r\n        event.preventDefault()\r\n        this.props.clearForm()\r\n    }\r\n\r\n    render(){\r\n\r\n        let editedOrder = null\r\n        \r\n        if(this.props.editedOrder!==null)\r\n            editedOrder = this.props.editedOrder\r\n        \r\n\r\n        return (\r\n            <div className=\"Addoreditorder\">\r\n                <h1>Add or Edit Order</h1>\r\n                <p>Fill The Order</p>\r\n                <form>\r\n                    <label>Name</label>\r\n                    <input type=\"text\" value={this.props.editedOrder.customer_name} onChange={(event)=>{this.handleNameChange(event)}} />\r\n                    <label>Email</label>\r\n                    <input type=\"text\" value={this.props.editedOrder.customer_email} onChange={(event)=>{this.handleEmailChange(event)}} />\r\n                    <label>Product</label>\r\n                    <input type=\"text\" value={this.props.editedOrder.product} onChange={(event)=>{this.handleProductChange(event)}} />\r\n                    <label>Qty</label>\r\n                    <input type=\"number\" value={this.props.editedOrder.quantity} onChange={(event)=>{this.handleQtyChange(event)}} />\r\n                    <button onClick={this.toggleAddEditOrder}>Toggle to {this.props.editing?\"Edit\":\"Add\"} Product</button>\r\n                    <input type=\"submit\" value={this.props.editing?\"Add\":\"Edit\"} />\r\n                    <button onClick={this.clearForm}>Reset</button>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        editedOrder: state.editedOrder,\r\n        editing: state.editing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleEditing: ()=>dispatch(actions.toggleEditing()),\r\n        clearForm: ()=>dispatch(actions.clearEditingOrder()),\r\n        handleInputChange: (input)=>dispatch(actions.handleInputChange())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddOrEditOrder)"]},"metadata":{},"sourceType":"module"}