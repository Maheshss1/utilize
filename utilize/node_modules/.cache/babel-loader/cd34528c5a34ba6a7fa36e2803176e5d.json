{"ast":null,"code":"import * as actions from '../actions/action';\nconst editedOrder = {\n  customer_name: '',\n  customer_email: '',\n  product: '',\n  quantity: '',\n  id: ''\n};\nconst initialState = {\n  orders: [],\n  loggedInUser: null,\n  editedOrder: { ...editedOrder\n  },\n  editing: false\n};\n\nconst reducer = (state = initialState, action) => {\n  let orders = null;\n  let editOrder = null;\n\n  switch (action.type) {\n    case actions.FETCH_ORDERS:\n      return { ...state,\n        orders: action.orders\n      };\n\n    case actions.GET_ORDER:\n      editOrder = state.orders.find(order => order.id === action.id);\n      return { ...state,\n        editedOrder: editOrder,\n        editing: true\n      };\n\n    case actions.TOGGLE_EDITING:\n      const toggleEditing = !{ ...state\n      }[\"editing\"];\n      return { ...state,\n        editing: toggleEditing\n      };\n\n    case actions.CLEAR_EDITING_ORDER:\n      return { ...state,\n        editedOrder: { ...editedOrder\n        },\n        editing: false\n      };\n\n    case actions.ADD_TO_ORDERS:\n      orders = [...state.orders];\n      orders.push(action.order);\n      return { ...state,\n        orders\n      };\n\n    case actions.DELETE_ORDER:\n      orders = [...state.orders];\n      orders = orders.filter(order => order.id !== action.id);\n      return { ...state,\n        orders,\n        editing: false\n      };\n\n    case actions.SAVE_EDITED_ORDER:\n      orders = [...state.orders];\n      orders = orders.map(order => {\n        if (order.id === action.order.id) return action.order;\n        return order;\n      });\n      return { ...state,\n        orders,\n        editedOrder: { ...editedOrder\n        },\n        editing: false\n      };\n\n    case actions.LOGIN_USER:\n      localStorage.setItem('loggedInUser', JSON.stringify(action.loginDetails));\n      console.log(action.loginDetails);\n      console.log(localStorage.getItem(\"loggedInUser\"));\n      return { ...state,\n        loggedInUser: action.loginDetails\n      };\n    // case actions.HANDLE_INPUT_CHANGE:\n    //     return {\n    //         ...state,\n    //         editedOrder:{\n    //             ...state.editedOrder,\n    //             [action.input]:action.value\n    //         }\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/utilize/src/store/reducer/reducer.js"],"names":["actions","editedOrder","customer_name","customer_email","product","quantity","id","initialState","orders","loggedInUser","editing","reducer","state","action","editOrder","type","FETCH_ORDERS","GET_ORDER","find","order","TOGGLE_EDITING","toggleEditing","CLEAR_EDITING_ORDER","ADD_TO_ORDERS","push","DELETE_ORDER","filter","SAVE_EDITED_ORDER","map","LOGIN_USER","localStorage","setItem","JSON","stringify","loginDetails","console","log","getItem"],"mappings":"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","sourcesContent":["import * as actions from '../actions/action'\r\nconst editedOrder = {\r\n    customer_name:'',\r\n    customer_email:'',\r\n    product:'',\r\n    quantity:'',\r\n    id:''\r\n}\r\n\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loggedInUser:null,\r\n    editedOrder:{...editedOrder},\r\n    editing:false\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    let orders = null\r\n    let editOrder = null\r\n    switch(action.type){\r\n        case actions.FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders:action.orders\r\n            }\r\n        case actions.GET_ORDER:\r\n            editOrder = state.orders.find(order => order.id===action.id)\r\n            return{\r\n                ...state,\r\n                editedOrder:editOrder,\r\n                editing:true\r\n            }\r\n        case actions.TOGGLE_EDITING:\r\n            const toggleEditing = !{...state}[\"editing\"]\r\n            return{\r\n                ...state,\r\n                editing: toggleEditing\r\n            }\r\n        case actions.CLEAR_EDITING_ORDER:\r\n            return{\r\n                ...state,\r\n                editedOrder: {...editedOrder},\r\n                editing:false\r\n            }\r\n        case actions.ADD_TO_ORDERS:\r\n            orders = [...state.orders]\r\n            orders.push(action.order)\r\n            \r\n            return{\r\n                ...state,\r\n                orders\r\n            }\r\n        case actions.DELETE_ORDER:\r\n            orders = [...state.orders]\r\n            orders = orders.filter(order => order.id!==action.id)\r\n            return{\r\n                ...state,\r\n                orders,\r\n                editing:false\r\n            }\r\n        case actions.SAVE_EDITED_ORDER:\r\n            orders = [...state.orders]\r\n            orders = orders.map(order=> {\r\n                if(order.id===action.order.id)\r\n                    return action.order\r\n                return order\r\n\r\n            })\r\n            return{\r\n                ...state,\r\n                orders,\r\n                editedOrder:{...editedOrder},\r\n                editing:false\r\n            }\r\n        case actions.LOGIN_USER:\r\n            localStorage.setItem('loggedInUser',JSON.stringify(action.loginDetails))\r\n            console.log(action.loginDetails)\r\n            console.log(localStorage.getItem(\"loggedInUser\"))\r\n            return{\r\n                ...state,\r\n                loggedInUser:action.loginDetails\r\n            }\r\n        // case actions.HANDLE_INPUT_CHANGE:\r\n        //     return {\r\n        //         ...state,\r\n        //         editedOrder:{\r\n        //             ...state.editedOrder,\r\n        //             [action.input]:action.value\r\n        //         }\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}