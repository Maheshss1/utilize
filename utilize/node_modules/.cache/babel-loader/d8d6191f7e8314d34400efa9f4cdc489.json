{"ast":null,"code":"var _jsxFileName = \"D:\\\\utilize\\\\src\\\\containers\\\\AddOrEditOrder\\\\AddOrEditOrder.js\";\nimport React from 'react';\nimport './AddOrEditOrder.css';\nimport * as actions from '../../store/actions/OrderCreator';\nimport { connect } from 'react-redux';\n\nclass AddOrEditOrder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customer_name: '',\n      customer_email: '',\n      product: '',\n      quantity: '',\n      id: ''\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        customer_name: event.target.value\n      });\n    };\n\n    this.handleEmailChange = event => {\n      this.setState({\n        customer_email: event.target.value\n      });\n    };\n\n    this.handleProductChange = event => {\n      this.setState({\n        product: event.target.value\n      });\n    };\n\n    this.handleQtyChange = event => {\n      this.setState({\n        quantity: event.target.value\n      });\n    };\n\n    this.toggleAddEditOrder = event => {\n      event.preventDefault();\n      this.props.toggleEditing(0);\n    };\n\n    this.clearForm = event => {\n      event.preventDefault();\n      this.props.clearForm();\n    };\n\n    this.onSubmitForm = event => {\n      let submit = true;\n      Object.keys(this.state).reduce(value => {\n        return submit && this.state[value] !== '';\n      });\n      console.log(submit);\n      event.preventDefault();\n      if (!this.props.editing) this.props.addToOrders(this.state);else this.props.editOrder(this.state);\n      this.props.clearForm();\n    };\n  }\n\n  componentDidUpdate() {\n    const order = this.props.editedOrder;\n    console.log(order);\n    if (order.id === undefined || order.id === null) return;\n    if (order.id !== this.state.id) this.setState({ ...order\n    });\n  }\n\n  render() {\n    let editedOrder = null;\n    if (this.props.editedOrder !== null) editedOrder = this.props.editedOrder;\n    let toggleButton = null;\n    if (this.props.editing) toggleButton = React.createElement(\"button\", {\n      onClick: this.toggleAddEditOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Toggle to \", this.props.editing ? \"Add\" : \"Edit\", \" Product\");\n    return React.createElement(\"div\", {\n      className: \"Addoreditorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Add or Edit Order\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Fill The Order\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.customer_name,\n      onChange: event => {\n        this.handleNameChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.customer_email,\n      onChange: event => {\n        this.handleEmailChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"select\", {\n      onChange: event => this.handleProductChange(event),\n      value: this.state.product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Product 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Product 1\"), React.createElement(\"option\", {\n      value: \"Product 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Product 2\"), React.createElement(\"option\", {\n      value: \"Product 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Product 3\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.quantity,\n      onChange: event => {\n        this.handleQtyChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), toggleButton, React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.props.editing ? \"Edit\" : \"Add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    editedOrder: state.editedOrder,\n    editing: state.editing\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleEditing: () => dispatch(actions.toggleEditing()),\n    clearForm: () => dispatch(actions.clearEditingOrder()),\n    addToOrders: order => dispatch(actions.addToOrders(order)),\n    editOrder: order => dispatch(actions.saveEditedOrder(order))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrEditOrder);","map":{"version":3,"sources":["D:/utilize/src/containers/AddOrEditOrder/AddOrEditOrder.js"],"names":["React","actions","connect","AddOrEditOrder","Component","state","customer_name","customer_email","product","quantity","id","handleNameChange","event","setState","target","value","handleEmailChange","handleProductChange","handleQtyChange","toggleAddEditOrder","preventDefault","props","toggleEditing","clearForm","onSubmitForm","submit","Object","keys","reduce","console","log","editing","addToOrders","editOrder","componentDidUpdate","order","editedOrder","undefined","render","toggleButton","mapStateToProps","mapDispatchToProps","dispatch","clearEditingOrder","saveEditedOrder"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './AddOrEditOrder.css'\r\nimport * as actions from '../../store/actions/OrderCreator'\r\nimport { connect } from 'react-redux'\r\n\r\nclass AddOrEditOrder extends React.Component{\r\n\r\n    state = {\r\n        customer_name:'',\r\n        customer_email:'',\r\n        product:'',\r\n        quantity:'',\r\n        id:''\r\n    }\r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({\r\n            customer_name:event.target.value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            customer_email:event.target.value\r\n        })\r\n    }\r\n\r\n    handleProductChange = (event) => {\r\n        this.setState({\r\n            product:event.target.value\r\n        })\r\n    }\r\n\r\n    handleQtyChange = (event) => {\r\n        this.setState({\r\n            quantity:event.target.value\r\n        })\r\n    }\r\n\r\n    toggleAddEditOrder = (event) => {\r\n        event.preventDefault()\r\n        this.props.toggleEditing(0)\r\n    }\r\n\r\n    clearForm = (event) => {\r\n        event.preventDefault()\r\n        this.props.clearForm()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const order = this.props.editedOrder\r\n        console.log(order)\r\n        if(order.id===undefined ||  order.id===null) return\r\n        if(order.id!==this.state.id)\r\n            this.setState({\r\n                ...order\r\n            })\r\n    }\r\n\r\n    onSubmitForm = (event) => {\r\n        let submit = true\r\n        Object.keys(this.state).reduce(value=>{\r\n            return submit && this.state[value]!==''\r\n        })\r\n        console.log(submit)\r\n\r\n        event.preventDefault()\r\n        if(!this.props.editing)\r\n            this.props.addToOrders(this.state)\r\n        else\r\n            this.props.editOrder(this.state)\r\n        this.props.clearForm()\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let editedOrder = null\r\n        \r\n        if(this.props.editedOrder!==null)\r\n            editedOrder = this.props.editedOrder\r\n        \r\n        let toggleButton = null\r\n        if(this.props.editing)\r\n            toggleButton = <button onClick={this.toggleAddEditOrder}>Toggle to {this.props.editing?\"Add\":\"Edit\"} Product</button>;\r\n\r\n        return (\r\n            <div className=\"Addoreditorder\">\r\n                <h1>Add or Edit Order</h1>\r\n                <p>Fill The Order</p>\r\n                <form onSubmit={this.onSubmitForm}>\r\n                    <label>Name</label>\r\n                    <input type=\"text\" value={this.state.customer_name} onChange={(event)=>{this.handleNameChange(event)}} />\r\n                    <label>Email</label>\r\n                    <input type=\"text\" value={this.state.customer_email} onChange={(event)=>{this.handleEmailChange(event)}} />\r\n                    <label>Product</label>\r\n                    <select onChange={(event)=>this.handleProductChange(event)} value={this.state.product}>\r\n                        <option value=\"Product 1\">Product 1</option>\r\n                        <option value=\"Product 2\">Product 2</option>\r\n                        <option value=\"Product 3\">Product 3</option>\r\n                    </select>\r\n                    <label>Qty</label>\r\n                    <input type=\"number\" value={this.state.quantity} onChange={(event)=>{this.handleQtyChange(event)}} />\r\n                    {toggleButton}\r\n                    <input type=\"submit\" value={this.props.editing?\"Edit\":\"Add\"} />\r\n                    <button onClick={this.clearForm}>Reset</button>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        editedOrder: state.editedOrder,\r\n        editing: state.editing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleEditing: ()=>dispatch(actions.toggleEditing()),\r\n        clearForm: ()=>dispatch(actions.clearEditingOrder()),\r\n        addToOrders: (order)=>dispatch(actions.addToOrders(order)),\r\n        editOrder: (order)=>dispatch(actions.saveEditedOrder(order))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddOrEditOrder)"]},"metadata":{},"sourceType":"module"}